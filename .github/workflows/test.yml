name: Test Suite
permissions:
  contents: read

on:
  push:
    branches: [main]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "npm"

      - run: npm ci
      - run: npm run build
      - run: npm run typecheck
      - run: npm run check

  unit-tests:
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "npm"

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - run: npm ci
      - run: npm run build

      - name: Run sandbox unit tests
        run: |
          set +e
          timeout --preserve-status 30 npm run test -w @cloudflare/sandbox > sandbox_test.log 2>&1
          EXIT_CODE=$?
          cat sandbox_test.log

          if grep -q "Test Files.*passed" sandbox_test.log && grep -q "Tests.*passed" sandbox_test.log; then
            echo "Sandbox tests passed"
            if [ $EXIT_CODE -eq 124 ] || [ $EXIT_CODE -eq 143 ]; then
              echo "::warning::Killed due to workerd shutdown hang (known vitest-pool-workers issue)"
            fi
            exit 0
          else
            echo "Sandbox tests failed"
            exit 1
          fi

      - name: Run container unit tests
        run: npm run test -w @repo/sandbox-container

  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "npm"

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - run: npm ci
      - run: npm run build

      # Deploy to branch-specific environment
      - name: Deploy test worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env ${{ github.ref_name }}
          workingDirectory: tests/e2e/test-worker

      - name: Get deployment URL
        id: get-url
        run: |
          URL=$(npx wrangler deployments list --env ${{ github.ref_name }} --format json | jq -r '.[0].url')
          echo "worker_url=$URL" >> $GITHUB_OUTPUT
        working-directory: tests/e2e/test-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          TEST_WORKER_URL: ${{ steps.get-url.outputs.worker_url }}
          CI: true
