name: Cleanup PR Resources

permissions:
  contents: read

on:
  pull_request:
    types: [closed]

jobs:
  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Set worker name
        id: worker-name
        run: |
          echo "worker_name=sandbox-e2e-test-worker-pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

      - name: Delete test worker
        continue-on-error: true
        run: |
          npx wrangler delete --name ${{ steps.worker-name.outputs.worker_name }} || echo "Worker already deleted or doesn't exist"
        working-directory: tests/e2e/test-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Delete test container
        continue-on-error: true
        run: |
          # Get container ID for this worker and delete it
          CONTAINER_ID=$(npx wrangler containers list --json | jq -r '.[] | select(.name=="${{ steps.worker-name.outputs.worker_name }}") | .id')
          if [ -n "$CONTAINER_ID" ]; then
            echo "Deleting container: $CONTAINER_ID"
            npx wrangler containers delete "$CONTAINER_ID" || echo "Failed to delete container"
          else
            echo "No container found for worker ${{ steps.worker-name.outputs.worker_name }}"
          fi
        working-directory: tests/e2e/test-worker
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
